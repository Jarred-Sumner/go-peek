// Code generated by go-enum
// DO NOT EDIT!

package repo

import (
	"fmt"
)

const (
	// KindClone is a Kind of type Clone
	KindClone Kind = iota
	// KindRoot is a Kind of type Root
	KindRoot
	// KindFile is a Kind of type File
	KindFile
	// KindPullRequest is a Kind of type PullRequest
	KindPullRequest
	// KindSearch is a Kind of type Search
	KindSearch
)

const _KindName = "clonerootfilepullRequestsearch"

var _KindMap = map[Kind]string{
	0: _KindName[0:5],
	1: _KindName[5:9],
	2: _KindName[9:13],
	3: _KindName[13:24],
	4: _KindName[24:30],
}

// String implements the Stringer interface.
func (x Kind) String() string {
	if str, ok := _KindMap[x]; ok {
		return str
	}
	return fmt.Sprintf("Kind(%d)", x)
}

var _KindValue = map[string]Kind{
	_KindName[0:5]:   0,
	_KindName[5:9]:   1,
	_KindName[9:13]:  2,
	_KindName[13:24]: 3,
	_KindName[24:30]: 4,
}

// ParseKind attempts to convert a string to a Kind
func ParseKind(name string) (Kind, error) {
	if x, ok := _KindValue[name]; ok {
		return x, nil
	}
	return Kind(0), fmt.Errorf("%s is not a valid Kind", name)
}
